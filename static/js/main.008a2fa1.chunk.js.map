{"version":3,"sources":["components/Node.js","components/Tutorial.js","App.js","index.js"],"names":["Node","row","col","className","Tutorial","useState","arrow","setArrow","onClick","class","App","documentNodes","nodes","currentRow","push","wallToggle","nodeToggle","startToggle","startNode","endNode","endSearch","endToggle","document","addEventListener","e","key","useEffect","querySelectorAll","forEach","node","classList","add","remove","parcels","includes","value","contains","searchTime","routeTime","directions","trigger","undefined","alert","findRoute","graph","from","to","length","triggerEndNode","work","at","route","i","setTimeout","querySelector","place","index","indexOf","pop","splice","j","some","w","concat","nodesArray","map","stringifyNodesArray","item","splitter","split","startGraph","endGraph","Number","substring","thisNode","upNode","downNode","leftNode","rightNode","nodeGraph","Object","create","filter","newGraph","keys","pathButton","rowIdx","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.008a2fa1.chunk.js","sourcesContent":["import React from 'react';\nimport './Node.scss';\n\nfunction Node({ row, col }) {\n  return <div className={`node R${row} C${col}`}></div>;\n}\n\nexport default Node;\n","import React from 'react';\nimport { useState } from 'react';\nimport './Tutorial.scss';\n\nexport default function Tutorial() {\n  const [arrow, setArrow] = useState(true);\n\n  return (\n    <div className={arrow ? 'tutorial-closed' : 'tutorial-open'}>\n      <div className=\"tutorial-opener\">\n        <h1\n          onClick={() => setArrow(!arrow)}\n          className={arrow ? 'arrow-up' : 'arrow-down'}\n        >\n          <i class=\"fas fa-chevron-down\"></i>\n        </h1>\n        {arrow ? null : (\n          <h1 className=\"tutorial-opener-words\">\n            <i class=\"fas fa-book\"></i> Tutorial\n          </h1>\n        )}\n      </div>\n      {arrow ? null : (\n        <div className=\"tutorial-content\">\n          <p>\n            The purpose of this application is to find the shortest path between\n            a starting and an ending point with optional detours along the way.\n            The user may also place walls along the grid that will need to be\n            traversed to reach the destination.\n          </p>\n          <br />\n          <div>\n            <p>\n              Please use this application in fullscreen for the best experience{' '}\n              <i className=\"far fa-smile-beam\"></i>\n            </p>\n            <br />\n            <p>\n              <i class=\"fas fa-chevron-right\"></i> To place a start node: hold\n              the \"s\" key and click on a grid square\n            </p>\n            <p>\n              <i class=\"fas fa-chevron-right\"></i> To place an end node: hold\n              the \"e\" key and click on a grid square\n            </p>\n            <p>\n              <i class=\"fas fa-chevron-right\"></i> To place a detour node: hold\n              the \"d\" key and click on a grid square\n            </p>\n            <p>\n              <i class=\"fas fa-chevron-right\"></i> To place a wall node: hold\n              the \"w\" key and hover over a grid square\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport Node from './components/Node';\nimport Tutorial from './components/Tutorial';\nimport { useEffect } from 'react';\nimport './App.scss';\n\nexport default function App() {\n  const nodes = [];\n  for (let row = 0; row < 23; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 50; col++) {\n      currentRow.push(true);\n    }\n    nodes.push(currentRow);\n  }\n\n  let documentNodes;\n  let wallToggle,\n    nodeToggle,\n    startToggle,\n    endToggle = false;\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'w':\n        wallToggle = true;\n        break;\n      case 'd':\n        nodeToggle = true;\n        break;\n      case 's':\n        startToggle = true;\n        break;\n      case 'e':\n        endToggle = true;\n        break;\n      default:\n        break;\n    }\n  });\n\n  document.addEventListener('keyup', () => {\n    wallToggle = false;\n    nodeToggle = false;\n    startToggle = false;\n    endToggle = false;\n  });\n\n  useEffect(() => {\n    documentNodes = document.querySelectorAll('.node');\n    documentNodes.forEach((node) => {\n      node.addEventListener('mouseover', () => {\n        if (wallToggle) node.classList.add('wall');\n      });\n      node.addEventListener('click', () => {\n        if (nodeToggle) {\n          node.classList.remove('address');\n          node.classList.add('address');\n          if (!parcels.includes(node) && node.classList.value.includes('node'))\n            parcels.push(node);\n        }\n        if (startToggle) {\n          documentNodes.forEach((node) => {\n            if (node.classList.contains('start-node'))\n              node.classList.remove('start-node');\n          });\n          node.classList.add('start-node');\n          startNode = node;\n        }\n\n        if (endToggle) {\n          documentNodes.forEach((node) => {\n            if (node.classList.contains('end-node'))\n              node.classList.remove('end-node');\n          });\n          node.classList.add('end-node');\n          endNode = node;\n        }\n      });\n    });\n  });\n\n  let startNode;\n  let endNode;\n  let endSearch;\n  let searchTime = 0;\n  let routeTime = 0;\n  let parcels = [];\n  const directions = [];\n  let trigger = false;\n\n  const pathButton = () => {\n    if (startNode === undefined || endNode === undefined)\n      alert('Select a start node and an end node');\n    else {\n      const nodesArray = [...documentNodes].map((node) => node.classList);\n      const stringifyNodesArray = [...documentNodes].map((item) => {\n        if (!item.classList.value.includes('wall')) {\n          let splitter = item.classList.value.split(' ');\n          return `${splitter[0]} ${splitter[1]} ${splitter[2]}`;\n        }\n        return item.classList.value;\n      });\n      let startGraph = startNode.classList.value.split(' ');\n      startGraph = `.${startGraph[0]}.${startGraph[1]}.${startGraph[2]}`;\n      let endGraph = endNode.classList.value.split(' ');\n      endGraph = `.${endGraph[0]}.${endGraph[1]}.${endGraph[2]}`;\n\n      const graph = nodesArray.map((node) => {\n        const row = Number(node[1].substring(1));\n        const col = Number(node[2].substring(1));\n\n        const thisNode = `.node.R${row}.C${col}`;\n\n        const upNode = stringifyNodesArray.includes(`node R${row - 1} C${col}`)\n          ? `.node.R${row - 1}.C${col}`\n          : null;\n        const downNode = stringifyNodesArray.includes(\n          `node R${row + 1} C${col}`\n        )\n          ? `.node.R${row + 1}.C${col}`\n          : null;\n        const leftNode = stringifyNodesArray.includes(\n          `node R${row} C${col - 1}`\n        )\n          ? `.node.R${row}.C${col - 1}`\n          : null;\n        const rightNode = stringifyNodesArray.includes(\n          `node R${row} C${col + 1}`\n        )\n          ? `.node.R${row}.C${col + 1}`\n          : null;\n\n        let nodeGraph = Object.create(null);\n        nodeGraph[thisNode] = [upNode, downNode, leftNode, rightNode].filter(\n          (item) => item != null\n        );\n\n        return nodeGraph;\n      });\n\n      let newGraph = Object.create(null);\n      for (let i = 0; i < graph.length; i++) {\n        newGraph[Object.keys(graph[i])[0]] = graph[i][Object.keys(graph[i])[0]];\n      }\n\n      for (let parcel of parcels) {\n        let item = parcel.classList.value.split(' ');\n        directions.push(`.${item[0]}.${item[1]}.${item[2]}`);\n      }\n\n      function findRoute(graph, from, to) {\n        documentNodes.forEach((node) => {\n          if (node.classList.contains('travel')) {\n            node.classList.remove('travel');\n            node.classList.add('nomo');\n          }\n        });\n        if (to.length === 0 && !trigger) {\n          endSearch = from;\n          triggerEndNode();\n          return;\n        } else if (to.length === 0 && trigger) {\n          return;\n        }\n        let work = [{ at: from, route: [] }];\n        for (let i = 0; i < work.length; i++) {\n          searchTime = 4 * i;\n          setTimeout(() => {\n            document.querySelector(`${work[i].at}`).classList.add('travel');\n          }, searchTime);\n          let { at, route } = work[i];\n          for (let place of graph[at]) {\n            if (to.includes(place)) {\n              let index = to.indexOf(place);\n              let pop = to.splice(index, 1);\n              for (let j = 0; j < route.length; j++) {\n                routeTime = searchTime;\n                setTimeout(() => {\n                  document.querySelector(`${route[j]}`).classList.add('route');\n                }, 60 * j + searchTime);\n                routeTime += 60 * j;\n              }\n              return setTimeout(() => {\n                findRoute(graph, pop, to);\n              }, routeTime);\n            }\n            if (!work.some((w) => w.at == place)) {\n              work.push({ at: place, route: route.concat(place) });\n            }\n          }\n        }\n      }\n\n      const triggerEndNode = () => {\n        trigger = true;\n        findRoute(newGraph, endSearch[0], [endGraph]);\n      };\n\n      if (parcels.length > 0) findRoute(newGraph, startGraph, directions);\n      else {\n        trigger = true;\n        findRoute(newGraph, startGraph, [endGraph]);\n      }\n    }\n  };\n\n  const clearBoard = () => {\n    documentNodes.forEach((node) => {\n      if (node.classList.length >= 3)\n        node.classList.remove(\n          'travel',\n          'nomo',\n          'start-node',\n          'end-node',\n          'wall',\n          'address',\n          'route'\n        );\n    });\n    parcels = [];\n    trigger = false;\n    startNode = undefined;\n    endNode = undefined;\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"navbar\">\n        <h2 onClick={() => pathButton()}>Find Path</h2>\n        <h2 onClick={() => clearBoard()}>Clear Board</h2>\n        <div className=\"start-legend\">\n          <div className=\"start-legend-graphic\"></div>\n          <h3>Start</h3>\n        </div>\n        <div className=\"end-legend\">\n          <div className=\"end-legend-graphic\"></div>\n          <h3>End</h3>\n        </div>\n        <div className=\"wall-legend\">\n          <div className=\"wall-legend-graphic\"></div>\n          <h3>Wall</h3>\n        </div>\n        <div className=\"detour-legend\">\n          <div className=\"detour-legend-graphic\"></div>\n          <h3>Detour</h3>\n        </div>\n        <div className=\"path-legend\">\n          <div className=\"path-legend-graphic\"></div>\n          <h3>Path</h3>\n        </div>\n      </div>\n      <div className=\"nodes\">\n        {nodes.map((row, index) => {\n          let rowIdx = index;\n          return (\n            <div className=\"row\" key={index}>\n              {row.map((col, index) => {\n                return <Node key={(rowIdx, index)} row={rowIdx} col={index} />;\n              })}\n            </div>\n          );\n        })}\n      </div>\n      <Tutorial />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}